"""The data structure behind storing the user's address"""
type Address {
  """
  Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newline characters. 
  """
  formatted: String

  """
  Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newline characters. 
  """
  street_address: String

  """City or locality component. """
  locality: String

  """State, province, prefecture or region component. """
  region: String

  """Zip code or postal code component. """
  postalCode: String

  """Country name component. """
  country: String
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar Hex

"""
User's Personal Data on Prifina - Based on OpenID Connect Basic Client Profile 
"""
type Individual {
  """Subject - Identifier for the End-User at the Issuer."""
  sub: String!

  """
  End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences. 
  """
  name: String

  """
  Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters. 
  """
  given_name: String

  """
  Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters. 
  """
  family_name: String

  """
  Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used. 
  """
  middle_name: String

  """
  Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.
  """
  nickname: String

  """
  Shorthand name that the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace. This value MUST NOT be relied upon to be unique by the RP. 
  """
  preferred_username: String

  """
  URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User. 
  """
  profile: String

  """
  string 	URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User. 
  """
  picture: String

  """
  URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with. 
  """
  website: String

  """
  End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. This value MUST NOT be relied upon to be unique by the RP, as discussed in Section 2.5.3. 
  """
  email: String

  """
  True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. 
  """
  email_verified: Boolean

  """
  End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
  """
  gender: String

  """ 	End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted. To represent only the year, YYYY format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates. 
  """
  birthdate: String

  """
  String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.
  """
  zoneinfo: String

  """
  End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Implementations MAY choose to accept this locale syntax as well.
  """
  locale_: String

  """
  End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678. 
  """
  phone_number: String

  """
  True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format. 
  """
  phone_number_verified: Boolean

  """
  Time the End-User's information was last updated. The time is represented as the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. 
  """
  updated_at: Int

  """
  End-User's preferred address. The value of the address member is a JSON [RFC4627] structure containing some or all of the members defined in Section 2.5.1.
  """
  address: [Address!]!

  """
  The collection of user's config and preference data for each app/widget they use
  """
  individualApps: [IndividualApp!]!
}

"""The user's config and preference data for each app/widget they use"""
type IndividualApp {
  """The units the user wish to display data in, e.g. metric, imperial, etc"""
  units_preference: String

  """The color scheme the user has set for the widget/application"""
  color_scheme: String

  """Display Language"""
  language: String
  cookies: Boolean

  """
  A property to store any and all app/widget specific data that developers wish to store that does not have a dedicated property for
  """
  custom: Json
  personalized_ads: Boolean
}

"""Raw JSON value"""
scalar Json

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

scalar RGBAHue

scalar RGBATransparency

"""Slate-compatible RichText AST"""
scalar RichTextAST

"""The `String`scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."""
scalar String

"""The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)."""
scalar Float

"""The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \"4\") or integer (such as 4) input value will be accepted as an ID."""
scalar ID

"""The data objects that can be called for"""
type Query {
  """"""
  individual: Individual

  """"""
  individualapp: IndividualApp
}