"""The data structure behind storing the user's address"""
type Address {
  """
  Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newline characters. 
  """
  formatted: String

  """
  Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newline characters. 
  """
  street_address: String

  """City or locality component. """
  locality: String

  """State, province, prefecture or region component. """
  region: String

  """Zip code or postal code component. """
  postalCode: String

  """Country name component. """
  country: String

  """Type of Address of the User: Home, Work, etc"""
  type: String
}

enum ColorSpace {
  sRGB
  Uncalibrated
}

enum ComponentsConfiguration {
  B
  Cb
  Cr
  does_not_exist
  G
  R
  Y
}

enum Compression {
  JPEG_compression
  uncompressed
}

enum Contrast {
  Hard
  Normal
  Soft
}

enum CustomRendered {
  Custom_process
  Normal_process
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

type Exif {
  """
  The version of this standard supported. Nonexistence of this field is taken to mean nonconformance
  to the standard (see section 4.2). In according with conformance to this standard, this tag shall be
  recorded like "0230” as 4-byte ASCII. Since the type is UNDEFINED, it shall not be terminated with
  NULL.
  """
  exifVersion: String

  """
  The Flashpix format version supported by a FPXR file. If the FPXR function supports Flashpix format
  Ver. 1.0, this is indicated similarly to ExifVersion by recording "0100" as 4-byte ASCII. Since the type
  is UNDEFINED, it shall not be terminated with NULL.
  """
  flashpixVersion: String

  """
  Indicates the value of coefficient gamma. The formula of transfer function used for image reproduction
  is expressed as follows.
  (Reproduced value) = (Input value)^(gamma)
  Both reproduced value and input value indicate normalized value, whose minimum value is 0 and maximum value is 1.
  """
  gamma: Float

  """
  Information specific to compressed data. When a compressed file is recorded, the valid width
  of the meaningful image shall be recorded in this tag, whether or not there is padding data or a
  restart marker.
  This tag shall not exist in an uncompressed file. 
  """
  pixelXDimension: Int

  """
  Information specific to compressed data. When a compressed file is recorded, the valid height of the
  meaningful image shall be recorded in this tag, whether or not there is padding data or a restart marker.
  This tag shall not exist in an uncompressed file. For details see section 4.8.1 and Annex F. Since
  data padding is unnecessary in the vertical direction, the number of lines recorded in this valid image
  height tag will in fact be the same as that recorded in the SOF.
  """
  pixelYDimension: Int

  """
  Information specific to compressed data. The compression mode used for a compressed image is
  indicated in unit bits per pixel.
  """
  compressedBitsPerPixel: Float

  """
  A tag for manufacturers of Exif/DCF writers to record any desired information. The contents are up to
  the manufacturer, but this tag shall not be used for any other than its intended purpose.
  """
  makerNote: Json

  """
  A tag for Exif users to write keywords or comments on the image besides those in ImageDescription,
  and without the character code limitations of the ImageDescription tag
  """
  userComment: String

  """
  This tag is used to record the name of an audio file related to the image data. The only relational
  information recorded here is the Exif audio file name and extension (an ASCII string consisting of 8
  characters + '.' + 3 characters). The path is not recorded.
  """
  relatedSoundFile: String

  """
  The date and time when the original image data was generated. For a DSC the date and time the
  picture was taken are recorded. The format is "YYYY:MM:DD HH:MM:SS" with time shown in 24-hour
  format, and the date and time separated by one blank character [20.H]. When the date and time are
  unknown, all the character spaces except colons (":") should be filled with blank characters, or else
  the Interoperability field should be filled with blank characters. The character string length is 20 Bytes
  including NULL for termination. When the field is left blank, it is treated as unknown.
  """
  dateTimeOriginal: String

  """
  The date and time when the image was stored as digital data. If, for example, an image was captured
  by DSC and at the same time the file was recorded, then the DateTimeOriginal and
  DateTimeDigitized will have the same contents. The format is "YYYY:MM:DD HH:MM:SS" with time
  shown in 24-hour format, and the date and time separated by one blank character [20.H]. When the
  date and time are unknown, all the character spaces except colons (":")should be filled with blank
  characters, or else the Interoperability field should be filled with blank characters. The character string
  length is 20 Bytes including NULL for termination. When the field is left blank, it is treated as
  unknown.
  """
  dateTimeDigitized: String

  """A tag used to record fractions of seconds for the DateTime tag."""
  subsecTime: String

  """
  A tag used to record fractions of seconds for the DateTimeOriginal tag.
  """
  subsecTimeOriginal: String

  """
  A tag used to record fractions of seconds for the DateTimeDigitized tag
  """
  subsecTimeDigitized: String

  """Exposure time, given in seconds (sec)."""
  exposureTime: Float

  """The F number."""
  fNumber: Float

  """
  Indicates the spectral sensitivity of each channel of the camera used. The tag value is an ASCII string
  compatible with the standard developed by the ASTM Technical committee.
  """
  spectralSensitivity: String

  """
  This tag indicates the sensitivity of the camera or input device when the image was shot. More
  specifically, it indicates one of the following values that are parameters defined in ISO 12232: standard
  output sensitivity (SOS), recommended exposure index (REI), or ISO speed. Accordingly, if a tag
  corresponding to a parameter that is designated by a SensitivityType tag is recorded, the values of the
  tag and of this PhotographicSensitivity tag are the same. However, if the value is 65535 (the
  maximum value of SHORT) or higher, the value of this tag shall be 65535. When recording this tag,
  the SensitivityType tag should also be recorded. In addition, while “Count = Any”, only 1 count should
  be used when recording this tag.
  """
  photographicSensitivity: Int

  """
  Indicates the Opto-Electric Conversion Function (OECF) specified in ISO 14524. OECF is the
  relationship between the camera optical input and the image values
  """
  oecf: [Json!]!

  """
  This tag indicates the standard output sensitivity value of a camera or input device defined in ISO
  12232. When recording this tag, the PhotographicSensitivity and SensitivityType tags shall also be
  recorded. See Annex G for use of sensitivity-related tags.
  """
  standardOutputSensitivity: Int

  """
  This tag indicates the recommended exposure index value of a camera or input device defined in ISO
  12232. When recording this tag, the PhotographicSensitivity and SensitivityType tags shall also be
  recorded. See Annex G for use of sensitivity-related tags.
  """
  recommendedExposureIndex: Int

  """
  This tag indicates the ISO speed value of a camera or input device that is defined in ISO 12232.
  When recording this tag, the PhotographicSensitivity and SensitivityType tags shall also be recorded.
  """
  isoSpeed: Int

  """
  This tag indicates the ISO speed latitude yyy value of a camera or input device that is defined in ISO
  12232.
  However, this tag shall not be recorded without ISOSpeed and ISOSpeedLatitudezzz.
  """
  isoSpeedLatitudeyyy: Int

  """
  This tag indicates the ISO speed latitude zzz value of a camera or input device that is defined in ISO
  12232.
  However, this tag shall not be recorded without ISOSpeed and ISOSpeedLatitudeyyy
  """
  isoSpeedLatitudezzz: Int

  """
  Shutter speed. The unit is the APEX (Additive System of Photographic Exposure) setting 
  """
  shutterSpeedValue: Float

  """The lens aperture. The unit is the APEX value."""
  apertureValue: Float

  """
  The value of brightness. The unit is the APEX value. Ordinarily it is given in the range of -99.99 to
  99.99. Note that if the numerator of the recorded value is FFFFFFFF.H, Unknown shall be indicated.
  """
  brightnessValue: Float

  """
  The exposure bias. The unit is the APEX value. Ordinarily it is given in the range of -99.99 to 99.99
  """
  exposureBiasValue: Float

  """
  The smallest F number of the lens. The unit is the APEX value. Ordinarily it is given in the range of
  00.00 to 99.99, but it is not limited to this range.
  """
  maxApertureValue: Float

  """
  The distance to the subject, given in meters. Note that if the numerator of the recorded value is
  FFFFFFFF.H, Infinity shall be indicated; and if the numerator is 0, Distance unknown shall be
  indicated
  """
  subjectDistance: Float

  """
  This tag indicates the location and area of the main subject in the overall scene.
  """
  subjectArea: [Int!]!

  """
  The actual focal length of the lens, in mm. Conversion is not made to the focal length of a 35 mm film
  camera.
  """
  focalLength: Float

  """
  Indicates the strobe energy at the time the image is captured, as measured in Beam Candle Power
  Seconds (BCPS).
  """
  flashEnergy: Float

  """
  This tag records the camera or input device spatial frequency table and SFR values in the direction of
  image width, image height, and diagonal direction, as specified in ISO 12233
  """
  spatialFrequencyResponse: Json

  """
  Indicates the number of pixels in the image width (X) direction per FocalPlaneResolutionUnit on the
  camera focal plane.
  """
  focalPlaneXResolution: Float

  """
  Indicates the number of pixels in the image height (Y) direction per FocalPlaneResolutionUnit on the
  camera focal plane.
  """
  focalPlaneYResolution: Float

  """
  Indicates the unit for measuring FocalPlaneXResolution and FocalPlaneYResolution. This value is the
  same as the ResolutionUnit
  """
  focalPlaneResolutionUnit: Int

  """
  Indicates the location of the main subject in the scene. The value of this tag represents the pixel at
  the center of the main subject relative to the left edge, prior to rotation processing as per the Rotation
  tag.
  The first value indicates the X column number and second indicates the Y row number.
  """
  subjectLocation: [Int!]!

  """
  Indicates the exposure index selected on the camera or input device at the time the image is
  captured.
  """
  exposureIndex: Float

  """
  Indicates the color filter array (CFA) geometric pattern of the image sensor when a one-chip color
  area sensor is used. It does not apply to all sensing methods.
  """
  cfaPattern: [Json!]!

  """
  This tag indicates the digital zoom ratio when the image was shot. If the numerator of the recorded
  value is 0, this indicates that digital zoom was not used
  """
  digitalZoomRatio: Float

  """
  This tag indicates the equivalent focal length assuming a 35mm film camera, in mm. A value of 0
  means the focal length is unknown. Note that this tag differs from the FocalLength tag.
  """
  focalLengthIn35MmFilm: Int

  """
  This tag indicates information on the picture-taking conditions of a particular camera model.
  The tag is used only to indicate the picture-taking conditions in the Exif/DCF reader
  """
  deviceSettingDescription: Json

  """
  This tag indicates an identifier assigned uniquely to each image. It is recorded as an ASCII string
  equivalent to hexadecimal notation and 128-bit fixed length.
  """
  imageUniqueId: String

  """
  This tag records the owner of a camera used in photography as an ASCII string.
  """
  cameraOwnerName: String

  """
  This tag records the serial number of the body of the camera that was used in photography as an
  ASCII string.
  """
  bodySerialNumber: String

  """
  This tag notes minimum focal length, maximum focal length, minimum F number in the minimum
  focal length, and minimum F number in the maximum focal length, which are specification information
  for the lens that was used in photography. When the minimum F number is unknown, the notation is
  0/0
  """
  lensSpecification: [Float!]!

  """This tag records the lens manufacturer as an ASCII string"""
  lensMake: String

  """
  This tag records the lens’s model name and model number as an ASCII string.
  """
  lensModel: String

  """
  This tag records the serial number of the interchangeable lens that was used in photography as an
  ASCII string.
  """
  lensSerialNumber: String

  """
  The color space information tag (ColorSpace) is always recorded as the color space specifier.
  Normally sRGB (=1) is used to define the color space based on the PC monitor conditions and
  environment. If a color space other than sRGB is used, Uncalibrated (=FFFF.H) is set. Image data
  recorded as Uncalibrated may be treated as sRGB when it is converted to Flashpix. On sRGB
  see Annex D.
  """
  colorSpace: ColorSpace

  """
  Information specific to compressed data. The channels of each component are arranged in order from
  the 1st component to the 4th. For uncompressed data the data arrangement is given in the
  PhotometricInterpretation tag. However, since PhotometricInterpretation can only express the order of
  Y,Cb and Cr, this tag is provided for cases when compressed data uses components other than Y, Cb,
  and Cr and to enable support of other sequences.
  """
  componentsConfiguration: ComponentsConfiguration

  """
  The class of the program used by the camera to set exposure when the picture is taken. The tag
  values are as follows.
  """
  exposureProgram: Exposure

  """
  The SensitivityType tag indicates which one of the parameters of ISO12232 is the
  PhotographicSensitivity tag. Although it is an optional tag, it should be recorded when a
  PhotographicSensitivity tag is recorded. Value = 4, 5, 6, or 7 may be used in case that the values of
  plural parameters are the same. See Annex G for use of sensitivity-related tags.
  """
  sensitivityType: Sensitivity

  """The metering mode"""
  meteringMode: MeterMode

  """The kind of light source."""
  lightSource: LightSource

  """
  This tag indicates the status of flash when the image was shot. Bit 0 indicates the flash firing status, bits
  1 and 2 indicate the flash return status, bits 3 and 4 indicate the flash mode, bit 5 indicates whether the
  flash function is present, and bit 6 indicates "red eye" mode 
  """
  flash: FlashModes

  """Indicates the image sensor type on the camera or input device. """
  sensingMethod: SensingMethod

  """
  Indicates the image source. If a DSC recorded the image, this tag value always shall be set to 3.
  """
  fileSource: FileSource

  """
  Indicates the type of scene. If a DSC recorded the image, this tag value shall always be set to 1,
  indicating that the image was directly photographed.
  """
  sceneType: SceneType

  """
  This tag indicates the use of special processing on image data, such as rendering geared to output.
  When special processing is performed, the Exif/DCF reader is expected to disable or minimize any
  further processing
  """
  customRendered: CustomRendered

  """
  This tag indicates the exposure mode set when the image was shot. In auto-bracketing mode, the
  camera shoots a series of frames of the same scene at different exposure settings.
  """
  exposureMode: ExposureMode

  """This tag indicates the white balance mode set when the image was shot"""
  whiteBalance: WhiteBalance

  """
  This tag indicates the type of scene that was shot. It may also be used to record the mode in which
  the image was shot. Note that this differs from the scene type (SceneType) tag.
  """
  sceneCaptureType: SceneCaptureType

  """This tag indicates the degree of overall image gain adjustment"""
  gainControl: GainControl

  """
  This tag indicates the direction of contrast processing applied by the camera when the image was
  shot.
  """
  contrast: Contrast

  """
  This tag indicates the direction of saturation processing applied by the camera when the image was
  shot.
  """
  saturation: Saturation

  """
  This tag indicates the direction of sharpness processing applied by the camera when the image was
  shot
  """
  sharpness: Sharpness

  """This tag indicates the distance to the subject"""
  subjectDistanceRange: SubjectDistanceRange
}

enum Exposure {
  Action_Program_biased_towards_shutter_speed
  Aperture_Priority
  Creative_Program_biased_towards_depth_of_field
  Landscape_Mode
  Manual
  Normal
  Portrait_Mode
  Shutter_Priority
  Unknown
}

enum ExposureMode {
  Auto_bracket
  Auto_exposure
  Manual_exposure
}

enum FileSource {
  DSC
  others
  scanner_of_reflex_type
  scanner_of_transparent_type
}

enum FlashModes {
  Flash
  Flash_auto
  Flash_auto_no_strobe_return
  Flash_auto_no_strobe_return_red_eye
  Flash_auto_red_eye
  Flash_auto_strobe_return
  Flash_auto_strobe_return_red_eye
  Flash_compulsory
  Flash_compulsory_no_strobe_return
  Flash_compulsory_red_eye
  Flash_compulsory_red_eye_no_strobe_return
  Flash_compulsory_red_eye_strobe_return
  Flash_compulsory_strobe_return
  Flash_no_strobe_return
  Flash_red_eye
  Flash_red_eye_no_strobe_return
  Flash_red_eye_strobe_return
  Flash_strobe_return
  No_Flash
  No_flash_auto
  No_flash_compulsory
  No_Flash_function
}

enum GainControl {
  High_gain_down
  High_gain_up
  Low_gain_down
  Low_gain_up
  None
}

enum GpsAltitudeRef {
  Sea_level
  Sea_level_reference
}

enum GpsDifferential {
  Differential_correction_applied
  Measurement_without_differential_correction
}

type GpsInfoIfd {
  """
  Indicates the version of GPSInfoIFD. The version is given as 2.3.0.0. This tag is mandatory when
  GPSInfo tag is present. Note that the GPSVersionID tag is written as a different byte than the Exif
  Version tag.
  """
  gpsVersionId: String

  """
  Indicates whether the latitude is north or south latitude. The ASCII value 'N' indicates north latitude, and 'S' is south latitude.
  """
  gpsLatitudeRef: String

  """
  Indicates the latitude. The latitude is expressed as three RATIONAL values giving the degrees,
  minutes, and seconds, respectively. If latitude is expressed as degrees, minutes and seconds, a
  typical format would be dd/1,mm/1,ss/1. When degrees and minutes are used and, for example,
  fractions of minutes are given up to two decimal places, the format would be dd/1,mmmm/100,0/1.
  """
  gpsLatitude: [Float!]!

  """
  Indicates whether the longitude is east or west longitude. ASCII 'E' indicates east longitude, and 'W' is
  west longitude.
  """
  gpsLongitudeRef: String

  """
  Indicates the longitude. The longitude is expressed as three RATIONAL values giving the degrees,
  minutes, and seconds, respectively. If longitude is expressed as degrees, minutes and seconds, a
  typical format would be ddd/1,mm/1,ss/1. When degrees and minutes are used and, for example,
  fractions of minutes are given up to two decimal places, the format would be ddd/1,mmmm/100,0/1.
  """
  gpsLongitude: [Float!]!

  """
  Indicates the altitude based on the reference in GPSAltitudeRef. Altitude is expressed as one
  RATIONAL value. The reference unit is meters.
  """
  gpsAltitude: Int

  """
  Indicates the time as UTC (Coordinated Universal Time). TimeStamp is expressed as three
  RATIONAL values giving the hour, minute, and second.
  """
  gpsTimeStamp: [Float!]!

  """
  Indicates the GPS satellites used for measurements. This tag may be used to describe the number of
  satellites, their ID number, angle of elevation, azimuth, SNR and other information in ASCII notation.
  The format is not specified. If the GPS receiver is incapable of taking measurements, value of the tag
  shall be set to NULL.
  """
  gpsSatellites: String

  """
  Indicates the status of the GPS receiver when the image is recorded. 'A' means measurement is in
  progress, and 'V' means the measurement is interrupted.
  """
  gpsStatus: String

  """
  Indicates the GPS measurement mode. '2' means two-dimensional measurement and '3' means
  three-dimensional measurement is in progress. Originally it was defined for GPS, but it may be used
  for recording a measure mode to record the position information provided from a mobile base station
  or wireless LAN as well as GPS.
  """
  gpsMeasureMode: String

  """
  Indicates the GPS DOP (data degree of precision). An HDOP value is written during two-dimensional
  measurement, and PDOP during three-dimensional measurement.
  """
  gpsdop: Float

  """
  Indicates the unit used to express the GPS receiver speed of movement. 'K' 'M' and 'N' represents
  kilometers per hour, miles per hour, and knots.
  """
  gpsSpeedRef: String

  """Indicates the speed of GPS receiver movement."""
  gpsSpeed: Float

  """
  Indicates the reference for giving the direction of GPS receiver movement. 'T' denotes true direction
  and 'M' is magnetic direction.
  """
  gpsTrackRef: String

  """
  Indicates the direction of GPS receiver movement. The range of values is from 0.00 to 359.99
  """
  gpsTrack: Float

  """
  Indicates the reference for giving the direction of the image when it is captured. 'T' denotes true
  direction and 'M' is magnetic direction.
  """
  gpsImgDirectionRef: String

  """
  Indicates the direction of the image when it was captured. The range of values is from 0.00 to 359.99
  """
  gpsImgDirection: Float

  """
  Indicates the geodetic survey data used by the GPS receiver. If the survey data is restricted to
  Japan,the value of this tag is 'TOKYO' or 'WGS-84'. If a GPS Info tag is recorded, it is strongly
  recommended that this tag be recorded
  """
  gpsMapDatum: String

  """
  Indicates whether the latitude of the destination point is north or south latitude. The ASCII value 'N'
  indicates north latitude, and 'S' is south latitude
  """
  gpsDestLatitudeRef: String

  """
  Indicates the latitude of the destination point. The latitude is expressed as three RATIONAL values
  giving the degrees, minutes, and seconds, respectively. If latitude is expressed as degrees, minutes
  and seconds, a typical format would be dd/1,mm/1,ss/1. When degrees and minutes are used and,
  for example, fractions of minutes are given up to two decimal places, the format would be dd/1,
  mmmm/100, 0/1.
  """
  gpsDestLatitude: [Float!]!

  """
  Indicates whether the longitude of the destination point is east or west longitude. ASCII 'E' indicates
  east longitude, and 'W' is west longitude.
  """
  gpsDestLongitudeRef: String

  """
  Indicates the longitude of the destination point. The longitude is expressed as three RATIONAL
  values giving the degrees, minutes, and seconds, respectively. If longitude is expressed as degrees,
  minutes and seconds, a typical format would be ddd/1, mm/1, ss/1. When degrees and minutes are
  used and, for example, fractions of minutes are given up to two decimal places, the format would be
  ddd/1, mmmm/100, 0/1.
  """
  gpsDestLongitude: [Float!]!

  """
  Indicates the reference used for giving the bearing to the destination point. 'T' denotes true direction
  and 'M' is magnetic direction.
  """
  gpsDestBearingRef: String

  """
  Indicates the bearing to the destination point. The range of values is from 0.00 to 359.99.
  """
  gpsDestBearing: Float

  """
  Indicates the unit used to express the distance to the destination point. 'K', 'M' and 'N' represent
  kilometers, miles and nautical miles 
  """
  gpsDestDistanceRef: String

  """Indicates the distance to the destination point."""
  gpsDestDistance: Float

  """
  A character string recording the name of the method used for location finding. The first byte indicates
  the character code used (Table 9, Table 10), and this is followed by the name of the method. Since
  the Type is not ASCII, NULL termination is not necessary
  """
  gpsProcessingMethod: Json

  """
  A character string recording the name of the GPS area. The first byte indicates the character code
  used (Table 9, Table 10), and this is followed by the name of the GPS area. Since the Type is not
  ASCII, NULL termination is not necessary.
  """
  gpsAreaInformation: String

  """
  A character string recording date and time information relative to UTC (Coordinated Universal Time).
  The format is "YYYY:MM:DD." The length of the string is 11 Bytes including NULL.
  """
  gpsDateStamp: String

  """This tag indicates horizontal positioning errors in meters."""
  gpshPositioningError: Float

  """
  Indicates the altitude used as the reference altitude. If the reference is sea level and the altitude is
  above sea level, 0 is given. If the altitude is below sea level, a value of 1 is given and the altitude is
  indicated as an absolute value in the GPSAltitude tag. The reference unit is meters. Note that this tag
  is BYTE type, unlike other reference tags.
  """
  gpsAltitudeRef: GpsAltitudeRef

  """
  Indicates whether differential correction is applied to the GPS receiver.
  """
  gpsDifferential: GpsDifferential
}

scalar Hex

"""
User's Personal Data on Prifina - Based on OpenID Connect Basic Client Profile 
"""
type Individual {
  """Subject - Identifier for the End-User at the Issuer."""
  sub: String!

  """
  End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences. 
  """
  name: String

  """
  Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters. 
  """
  given_name: String

  """
  Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters. 
  """
  family_name: String

  """
  Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used. 
  """
  middle_name: String

  """
  Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.
  """
  nickname: String

  """
  Shorthand name that the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace. This value MUST NOT be relied upon to be unique by the RP. 
  """
  preferred_username: String

  """
  URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User. 
  """
  profile: String

  """
  string 	URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User. 
  """
  picture: String

  """
  URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with. 
  """
  website: String

  """
  End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. This value MUST NOT be relied upon to be unique by the RP, as discussed in Section 2.5.3. 
  """
  email: String

  """
  True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. 
  """
  email_verified: Boolean

  """
  End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
  """
  gender: String

  """ 	End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted. To represent only the year, YYYY format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates. 
  """
  birthdate: String

  """
  String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.
  """
  zoneinfo: String

  """
  End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Implementations MAY choose to accept this locale syntax as well.
  """
  locale_: String

  """
  End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678. 
  """
  phone_number: String

  """
  True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format. 
  """
  phone_number_verified: Boolean

  """
  Time the End-User's information was last updated. The time is represented as the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. 
  """
  updated_at: Int

  """
  End-User's preferred address. The value of the address member is a JSON [RFC4627] structure containing some or all of the members defined in Section 2.5.1.
  """
  address: [Address!]!

  """
  The collection of user's config and preference data for each app/widget they use
  """
  individualApps: [IndividualApp!]!
}

"""The user's config and preference data for each app/widget they use"""
type IndividualApp {
  """The color scheme the user has set for the widget/application"""
  color_scheme: String

  """Display Language"""
  language: String
  personalized_ads: Boolean
  cookies: Boolean

  """
  A property to store any and all app/widget specific data that developers wish to store that does not have a dedicated property for
  """
  custom: Json

  """
  "Limits the amount of in-app animations, including live engagement counts." - Taken from Twitter
  """
  reduce_motion: Boolean

  """
  "Improves legibility by increasing the contrast between text and background colors." - Taken from Twitter
  """
  increase_color_contrast: Boolean

  """will use less network data."""
  data_saver: Boolean
  autoplay: Boolean

  """The units the user wish to display data in, e.g. metric, imperial, etc"""
  units_preference: MeasUnits

  """The units used for the temperature"""
  temperature: TempUnits
}

"""Raw JSON value"""
scalar Json

enum LightSource {
  D55
  D65
  D75
  Daylight
  Fluorescent
  Standard_Illuminant_A
  Standard_Illuminant_B
  Standard_Illuminant_C
  Tungsten
  Unknown
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MeasUnits {
  Imperial
  Metric
}

enum MeterMode {
  Average
  Centre_Weighted_Average
  Multi_Spot
  Partial
  Pattern
  Spot
  Unknown
}

enum PhotometricInterpretation {
  RGB
  YCbCr
}

enum PlanarConfiguration {
  chunky_format
  planar_format
}

scalar RGBAHue

scalar RGBATransparency

enum ResolutionUnit {
  centimeters
  inches
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

enum Saturation {
  High_Saturation
  Low_Saturation
  Normal
}

enum SceneCaptureType {
  Landscape
  Night_scene
  Portrait
  Standard
}

enum SceneType {
  A_directly_photographed_image
}

enum SensingMethod {
  Color_sequential_area_sensor
  Color_sequential_linear_sensor
  Not_defined
  One_chip_color_area_sensor
  Three_chip_color_area_sensor
  Trilinear_sensor
  Two_chip_color_area_sensor
}

enum Sensitivity {
  ISO_speed
  Recommended_exposure_index
  REI_and_ISO_speed
  SOS_and_ISO_speed
  SOS_and_REI
  SOS_and_REI_and_ISO_speed
  Standard_output_sensitivity
}

enum Sharpness {
  Hard
  Normal
  Soft
}

enum SubjectDistanceRange {
  Close_view
  Distant_view
  Macro
  unknown
}

enum TempUnits {
  Celsius
  Fahrenheit
}

enum WhiteBalance {
  Auto
  Manual
}

enum YCbCrPositioning {
  centered
  co_sited
}

type ZerothIfdTiff {
  """
  The number of columns of image data, equal to the number of pixels per row. In JPEG compressed
  data, this tag shall not be used because a JPEG marker is used instead of it.
  """
  imageWidth: Int

  """
  The number of rows of image data. In JPEG compressed data, this tag shall not be used because a
  JPEG marker is used instead of it.
  """
  imageLength: Int

  """
  The number of bits per image component. In this standard each component of the image is 8 bits, so
  the value for this tag is 8. See also SamplesPerPixel. In JPEG compressed data, this tag shall not be
  used because a JPEG marker is used instead of it.
  """
  bitsPerSample: [Int!]!

  """The image orientation viewed in terms of rows and columns."""
  orientation: Int

  """
  The number of components per pixel. Since this standard applies to RGB and YCbCr images, the
  value set for this tag is 3. In JPEG compressed data, this tag shall not be used because a JPEG
  marker is used instead of it.
  """
  samplesPerPixel: Int

  """
  The sampling ratio of chrominance components in relation to the luminance component. In JPEG
  compressed data a JPEG marker is used instead of this tag. So, this tag shall not be recorded
  """
  yCbCrSubSampling: [Int!]!

  """
  he number of pixels per ResolutionUnit in the ImageWidth direction. When the image resolution is unknown, 72 [dpi] shall be designated
  """
  xResolution: Float

  """
  The number of pixels per ResolutionUnit in the ImageLength direction. The same value as XResolution shall be designated.
  """
  yResolution: Float

  """
  For each strip, the byte offset of that strip. It is recommended that this be selected so the number of
  strip bytes does not exceed 64 KBytes.In the case of JPEG compressed data, this designation is not
  necessary,. So, this tag shall not be recorded. See also RowsPerStrip and StripByteCounts
  """
  stripOffsets: [Int!]!

  """
  The number of rows per strip. This is the number of rows in the image of one strip when an image is
  divided into strips.In the case of JPEG compressed data, this designation is not necessary. So, this
  tag shall not be recorded..See also RowsPerStrip and StripByteCounts
  """
  rowsPerStrip: Int

  """
  The total number of bytes in each strip. In the case of JPEG compressed data,, this designation is not necessary. So, this tag shall not be recorded..
  """
  stripByteCounts: [Int!]!

  """
  The offset to the start byte (SOI) of JPEG compressed thumbnail data. This shall not be used for
  primary image JPEG data.
  """
  jpegInterchangeFormat: Int

  """
  The number of bytes of JPEG compressed thumbnail data. This is not used for primary image JPEG
  data. JPEG thumbnails are not divided but are recorded as a continuous JPEG bitstream from SOI to
  EOI. APPn and COM markers should not be recorded. Compressed thumbnails shall be recorded in
  no more than 64 KBytes, including all other data to be recorded in APP1
  """
  jpegInterchangeFormatLength: Int

  """
  A transfer function for the image, described in tabular style. Normally this tag need not be used , since
  color space is specified in the color space information tag (ColorSpace).
  """
  transferFunction: [Int!]!

  """
  The chromaticity of the white point of the image. Normally this tag need not be used, since color
  space is specified in the color space information tag (ColorSpace).
  """
  whitePoint: [Float!]!

  """
  The chromaticity of the three primary colors of the image. Normally this tag need not be used, since
  color space is specified in the color space information tag (ColorSpace).
  """
  primaryChromaticities: [Float!]!

  """
  The matrix coefficients for transformation from RGB to YCbCr image data. No default is given in TIFF;
  but here the characteristics given in Annex D, "Color Space Guidelines," is used as the default.
  """
  yCbCrCoefficients: [Float!]!

  """
  The reference black point value and reference white point value. No defaults are given in TIFF, but
  the values below are given as defaults here. The color space is declared in a color space
  information tag, with the default being the value that gives the optimal image characteristics
  Interoperability these conditions.
  """
  referenceBlackWhite: [Float!]!

  """
  The date and time of image creation. In this standard it is the date and time the file was changed. The
  format is "YYYY:MM:DD HH:MM:SS" with time shown in 24-hour format, and the date and time
  separated by one blank character [20.H]. When the date and time are unknown, all the character
  spaces except colons (":") should be filled with blank characters, or else the Interoperability field
  should be filled with blank characters. The character string length is 20 Bytes including NULL for
  termination. When the field is left blank, it is treated as unknown.
  """
  dateTime_: String

  """
  A character string giving the title of the image. It is possible to be added a comment such as "1988
  company picnic" or the like. Two-byte character codes cannot be used. When a 2-byte code is
  necessary, the Exif Private tag UserComment is to be used
  """
  imageDescription: String

  """
  The manufacturer of the recording equipment. This is the manufacturer of the DSC, scanner, video
  digitizer or other equipment that generated the image. When the field is left blank, it is treated as
  unknown
  """
  make: String

  """
  The model name or model number of the equipment. This is the model name of number of the DSC,
  scanner, video digitizer or other equipment that generated the image. When the field is left blank, it is
  treated as unknown
  """
  model: String

  """
  This tag records the name and version of the software or firmware of the camera or image input
  device used to generate the image. The detailed format is not specified, but it is recommended that
  the example shown below be followed. When the field is left blank, it is treated as unknown.
  """
  software: String

  """
  This tag records the name of the camera owner, photographer or image creator. The detailed format
  is not specified, but it is recommended that the information be written as in the example below for
  ease of Interoperability. When the field is left blank, it is treated as unknown.
  """
  artist: String

  """
  Copyright information. In this standard the tag is used to indicate both the photographer and editor
  copyrights. It is the copyright notice of the person or organization claiming rights to the image. The
  Interoperability copyright statement including date and rights should be written in this field; e.g.,
  "Copyright, John Smith, 19xx. All rights reserved." In this standard the field records both the
  photographer and editor copyrights, with each recorded in a separate part of the statement. When
  there is a clear distinction between the photographer and editor copyrights, these are to be written in
  the order of photographer followed by editor copyright, separated by NULL (in this case, since the
  statement also ends with a NULL, there are two NULL codes) (see example 1). When only the
  photographer copyright is given, it is terminated by one NULL code (see example 2). When only the
  editor copyright aaais given, the photographer copyright part consists of one space followed by a
  terminating NULL code, then the editor copyright is given (see example 3). When the field is left
  blank, it is treated as unknown.
  """
  copyright: String
  exif: Exif
  gpsInfoIfd: GpsInfoIfd
  firstIfdTiff: ZerothIfdTiff

  """
  The compression scheme used for the image data. When a primary image is JPEG compressed, this
  designation is not necessary. So, this tag shall not be recorded. When thumbnails use JPEG
  compression, this tag value is set to 6.
  """
  compression: Compression

  """
  The pixel composition. In JPEG compressed data, this tag shall not be used because a JPEG marker
  is used instead of it.
  """
  photometricInterpretation: PhotometricInterpretation

  """
  Indicates whether pixel components are recorded in chunky or planar format. In JPEG compressed
  data, this tag shall not be used because a JPEG marker is used instead of it. If this field does not
  exist, the TIFF default of 1 (chunky) is assumed.
  """
  planarConfiguration: PlanarConfiguration

  """
  The position of chrominance components in relation to the luminance component. This field is
  designated only for JPEG compressed data or uncompressed YCbCr data. The TIFF default is 1
  (centered); but when Y:Cb:Cr = 4:2:2 it is recommended in this standard that 2 (co-sited) be used to
  record data, in order to improve the image quality when viewed on TV systems. When this field does
  not exist, the reader shall assume the TIFF default. In the case of Y:Cb:Cr = 4:2:0, the TIFF default
  (centered) is recommended. If the Exif/DCF reader does not have the capability of supporting both
  kinds of YCbCrPositioning, it shall follow the TIFF default regardless of the value in this field. It is
  preferable that readers can support both centered and co-sited positioning.
  """
  yCbCrPositioning: YCbCrPositioning

  """
  The unit for measuring XResolution and YResolution. The same unit is used for both XResolution and
  YResolution. If the image resolution in unknown, 2 (inches) shall be designated.
  """
  resolutionUnit: ResolutionUnit
}

"""The data objects that can be called for"""
type Query {
  """"""
  individual: Individual

  """"""
  individualapp: IndividualApp

  """"""
  zerothifdtiff: ZerothIfdTiff
}